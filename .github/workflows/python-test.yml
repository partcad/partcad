# CI on Linux, MacOS and Windows
name: CI # Keep the action badge icon short

on:
  push:
    branches: ["main", "devel"]
  pull_request:
    branches: ["main", "devel"]

permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest] # macos-latest has an issue with nlopt
        # os: [ubuntu-latest, windows-latest, macos-13] # macos-latest has an issue with nlopt
        python-version:
          - "3.10"
          # - "3.11"
          - "3.12"
        exclude:
          # Reduce costs by testing one version of Python on MacOS
          - os: "macos-13"
            python-version: "3.10"
          - os: "macos-13"
            python-version: "3.11"
          # False negatives on Windows for pytest result evaluation
          - os: "windows-latest"
            python-version: "3.11"
          - os: "windows-latest"
            python-version: "3.12"
    runs-on: ${{ matrix.os }}
    if: "!startsWith(github.event.head_commit.message, 'Version updated')"

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - name: Install OS-specific dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y openscad
      - name: Install OS-specific dependencies (MacOS)
        if: runner.os == 'macOS'
        run: |
          brew install -f openscad || ( \
            rm /Users/runner/Library/Caches/Homebrew/downloads/*--OpenSCAD-*.dmg && brew install -f openscad)
      - name: Install OS-specific dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          # Prepare the registry
          reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem" /v LongPathsEnabled /t REG_DWORD /d 1 /f

          # Install OpenSCAD
          curl -o openscad.zip https://files.openscad.org/OpenSCAD-2021.01-x86-64.zip
          Expand-Archive -Force openscad.zip
          Add-Content $env:GITHUB_PATH $env:GITHUB_WORKSPACE\openscad\openscad-2021.01

      #     # Conda
      #     ## Uninstall Anaconda
      #     conda init --reverse --all --user
      #     conda init --reverse --all --system
      #     ## Install Miniforge3
      #     curl -L -o miniforge.exe https://github.com/conda-forge/miniforge/releases/download/24.9.2-0/Miniforge3-24.9.2-0-Windows-x86_64.exe
      #     mkdir miniforge3
      #     ./miniforge.exe /S /D=$env:GITHUB_WORKSPACE/miniforge3
      #     Add-Content $env:GITHUB_PATH $env:GITHUB_WORKSPACE\miniforge3\condabin
      # - name: Initialize conda
      #   run: |
      #     conda --set auto_activate_base false
      #     conda init
      #     conda info
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U pytest
          # Install all core and a subset of CLI dependencies, that are required for tests
          pip install -r partcad/requirements.txt && pip install svglib rlPyCairo renderlab
      # - name: Test with pytest
      #   env:
      #     PYTHONPATH: partcad/src
      #     PYTHONWARNINGS: ignore
      #   run: |
      #     pytest -x -p no:error-for-skips -p no:warnings
      - name: Install CLI
        run: |
          pip install -U ./partcad ./partcad-cli
      - name: Basic integration test for CLI
        run: |
          openscad --version
          mkdir new_pkg
          cd new_pkg
          pc --no-ansi init
          pc --no-ansi list-all -r
          cd ../examples
          pc --no-ansi list-all -r
          pc --no-ansi test -r
          pc --no-ansi render -r
          # No testing resources for the below:
          #if [ "$RUNNER_OS" == "Windows" ]; then
          #  echo "Skipping additional tests on Windows: not enough resources on the runner";
          #else
          #  pc --no-ansi test -r --package /pub/examples;
          #fi

  # No testing resources for the below:
  #test-repo:
  #  strategy:
  #    fail-fast: false
  #    matrix:
  #      os: ["ubuntu-latest-m"]
  #      python-version: ["3.12"]
  #  runs-on: ${{ matrix.os }}
  #  if: "!startsWith(github.event.head_commit.message, 'Version updated')"
  #  steps:
  #    - uses: actions/checkout@v3
  #    - uses: ./.github/actions/setup
  #    - name: Install dependencies
  #      run: |
  #        python -m pip install --upgrade pip
  #        pip install -U pytest
  #        pip install -r partcad/requirements.txt
  #        # Install a subset of CLI dependencies, that are required for tests
  #        pip install svglib rlPyCairo renderlab
  #        # pip install -r partcad-cli/requirements.txt
  #    - name: Install OS-specific dependencies (Linux)
  #      if: runner.os == 'Linux'
  #      run: |
  #        sudo apt-get update
  #        sudo apt-get install -y openscad
  #    - name: Install OS-specific dependencies (MacOS)
  #      if: runner.os == 'macOS'
  #      run: |
  #        brew install openscad
  #    - name: Install OS-specific dependencies (Windows)
  #      if: runner.os == 'Windows'
  #      run: |
  #        curl -o openscad-installer.exe https://files.openscad.org/OpenSCAD-2021.01-x86-64-Installer.exe
  #        ./openscad-installer.exe
  #    - name: Test the entire repository
  #      run: |
  #        pip install -U ./partcad ./partcad-cli
  #        cd examples
  #        pc --no-ansi test -r --package /pub
