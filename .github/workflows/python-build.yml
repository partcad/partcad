# CD on Linux, MacOS and Windows
name: CD # Keep the action badge icon short

on:
  push:
    branches: ["main", "devel"]
  pull_request:
    branches: ["main", "devel"]

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13] # macos-latest has an issue with nlopt
        # os: [ubuntu-latest, windows-latest, macos-latest]
        # TODO(clairbee): Add pypy versions to the matrix?
        python-version: ["3.10", "3.12"]
        #python-version: ["3.10", "3.11", "3.12"]
        # TODO(clairbee): prescrive specific versions since nlopt often causes problems on Windows or MacOS?
        # python-version: ["3.10.11", "3.11.8", "3.12.3"]
        exclude:
          # Reduce costs by testing one version of Python on MacOS
          - os: "macos-13"
            python-version: "3.10"
    runs-on: ${{ matrix.os }}
    if: "!startsWith(github.event.head_commit.message, 'Version updated')"
    env:
      BIN_DIR: ${{ matrix.os == 'windows-latest' && 'Scripts' || 'bin' }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Prepare environments
        shell: bash
        run: |
          . ~/.bashrc
          . ~/.bash_profile

          mamba create -n env-build python=${{ matrix.python-version }} -y
          mamba activate env-build
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip wheel mypy setuptools
          python -m pip install --upgrade build
          mamba deactivate

          mamba create -n env-build-cli python=${{ matrix.python-version }} -y
          mamba activate env-build-cli
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip wheel mypy setuptools
          python -m pip install --upgrade build
          mamba deactivate

          # Done in action.yml
          # mamba create -n env-test python=${{ matrix.python-version }} -y
          # mamba activate env-test
          # python -m pip install --upgrade build
          # mamba deactivate

      # cadquery-ocp hack for MacOS with ARM
      - name: install cadquery-ocp on MacOS (Python 3.10)
        if: ${{ startsWith(matrix.os, 'macos') && (matrix.os != 'macos-13') && (matrix.python-version == '3.10') }}
        shell: bash
        run: |
          . ~/.bashrc
          . ~/.bash_profile

          mamba activate env-build
          python -m pip install https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp310-cp310-macosx_11_0_arm64.whl
          mamba deactivate

          mamba activate env-build-cli
          python -m pip install https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp310-cp310-macosx_11_0_arm64.whl
          mamba deactivate

          # Done in action.yml
          # mamba activate env-test
          # python -m pip install https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp310-cp310-macosx_11_0_arm64.whl
          # mamba deactivate

      - name: install cadquery-ocp on MacOS (Python 3.11)
        if: ${{ startsWith(matrix.os, 'macos') && (matrix.os != 'macos-13') && (matrix.python-version == '3.11') }}
        shell: bash
        run: |
          . ~/.bashrc
          . ~/.bash_profile

          mamba activate env-build
          python -m pip install https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp311-cp311-macosx_11_0_arm64.whl
          mamba deactivate

          mamba activate env-build-cli
          python -m pip install https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp311-cp311-macosx_11_0_arm64.whl
          mamba deactivate

          # Done in action.yml
          mamba activate env-test
          python -m pip install https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp311-cp311-macosx_11_0_arm64.whl
          mamba deactivate

      - name: install cadquery-ocp on MacOS (Python 3.12)
        if: ${{ startsWith(matrix.os, 'macos') && (matrix.os != 'macos-13') && (matrix.python-version == '3.12') }}
        shell: bash
        run: |
          . ~/.bashrc
          . ~/.bash_profile

          mamba activate env-build
          python -m pip install https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp312-cp312-macosx_11_0_arm64.whl
          mamba deactivate

          mamba activate env-build-cli
          python -m pip install https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp312-cp312-macosx_11_0_arm64.whl
          mamba deactivate

          # Done in action.yml
          mamba activate env-test
          python -m pip install https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp312-cp312-macosx_11_0_arm64.whl
          mamba deactivate

      - name: Test building and packaging
        shell: bash
        run: |
          . ~/.bashrc
          . ~/.bash_profile

          mamba activate env-build
          cp .github/LICENSE.txt .github/apache20.svg partcad
          (cd partcad && python -m build)
          mamba deactivate

          mamba activate env-build-cli
          cp .github/LICENSE.txt .github/apache20.svg .github/README.md partcad-cli
          python -m pip install -r partcad/requirements.txt
          python -m pip install --no-index --find-links=partcad/dist partcad
          (cd partcad-cli && python -m build)
          mamba deactivate

      - name: Test installation
        shell: bash
        run: |
          . ~/.bashrc
          . ~/.bash_profile

          mamba activate env-test
          python -m pip install -r partcad/requirements.txt
          python -m pip install --no-index --find-links=partcad/dist partcad
          python -m pip install -r partcad-cli/requirements.txt
          python -m pip install --no-index --find-links=partcad-cli/dist partcad-cli
          mamba deactivate

      - name: Build documentation
        shell: bash
        run: |
          . ~/.bashrc
          . ~/.bash_profile

          mamba activate env-test
          # python -m pip install -r .devcontainer/requirements.txt
          python -m pip install -r docs/requirements.txt
          sphinx-build  -M html docs/source docs/build -n -W
          mamba deactivate
