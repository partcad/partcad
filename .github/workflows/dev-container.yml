# https://github.com/devcontainers/ci/blob/main/docs/github-action.md
name: "Dev Container CI"
on:
  pull_request:
  push:
    branches:
      - main
      - devel

jobs:
  # TODO: @alexanderilyin: Add Allure reports
  # TODO: @alexanderilyin: Add Code Coverage reports
  build:
    name: Build Dev Container
    runs-on: ubuntu-latest
    permissions:
      # https://docs.github.com/en/actions/security-for-github-actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
      contents: read
      packages: write
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Dev Container
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/partcad/partcad-devcontainer
          imageTag: "PR-${{ github.event.pull_request.number }}"
          cacheFrom: ghcr.io/partcad/partcad-devcontainer
          push: always
  install:
    # TODO: @alexanderilyin: cache "poetry install"
    name: Install Python dependencies
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
      - name: Install Python dependencies using Poetry
        uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/partcad/partcad-devcontainer:"PR-${{ github.event.pull_request.number }}"
          push: never
          runCmd: poetry --no-ansi --no-interaction install
  pytest:
    name: Run pytest
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
      - name: Run PyTest
        uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/partcad/partcad-devcontainer:"PR-${{ github.event.pull_request.number }}"
          push: never
          runCmd: poetry --no-ansi --no-interaction run pytest --verbose
  pre-commit:
    name: Run pre-commit
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
      - name: Run pre-commit hooks
        uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/partcad/partcad-devcontainer:"PR-${{ github.event.pull_request.number }}"
          push: never
          runCmd: pre-commit run --show-diff-on-failure --color=always --all-files
