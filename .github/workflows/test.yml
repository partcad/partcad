# CI on Linux, MacOS and Windows
name: CI # Keep the action badge icon short

on:
  workflow_dispatch:
  merge_group:
  push:
    branches: ["main", "devel"]
  pull_request:
    branches: ["main", "devel"]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-pytest:
    name: "Pytest"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    if: ${{ !startsWith(github.event.head_commit.message, 'Version updated') }}
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-all
      - uses: ./.github/actions/setup-test

      - name: Prepare folders
        shell: bash
        run: |
          mkdir -pv test-results

      - name: Test with pytest
        env:
          PYTHONPATH: partcad/src
          PYTHONWARNINGS: ignore
        shell: bash
        run: |
          # shellcheck disable=SC1090
          . ~/.bashrc
          # shellcheck disable=SC1090
          . ~/.bash_profile

          DIR=$(pwd)
          mamba activate test
          pytest -x -p no:error-for-skips -p no:warnings
          coverage xml --data-file=$DIR/.coverage -o $DIR/test-results/coverage.xml
          mamba deactivate

      - name: Upload test results & coverage reports to github and codecov
        if: always()
        uses: ./.github/actions/upload-test-results
        with:
          name: test-results
          path: test-results/
          retention-days: 7
          status: ${{ job.status }}
          token: ${{ secrets.CODECOV_TOKEN }}
          codecov-files: test-results/junit.xml
          coverage-report: test-results/coverage.xml

  test-behave:
    name: "Behave"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    if: ${{ !startsWith(github.event.head_commit.message, 'Version updated') }}
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-all
      - uses: ./.github/actions/setup-test

      - name: Prepare folders
        shell: bash
        run: |
          mkdir -pv test-results

      - name: Test with behave
        shell: bash
        run: |
          # shellcheck disable=SC1090
          . ~/.bashrc
          # shellcheck disable=SC1090
          . ~/.bash_profile

          DIR=$(pwd)
          mamba activate test
          coverage run behave
          coverage xml --data-file=$DIR/.coverage -o $DIR/test-results/coverage.xml
          mamba deactivate

      - name: Upload test results & coverage reports to github and codecov
        uses: ./.github/actions/upload-test-results
        with:
          name: test-results
          path: test-results/
          retention-days: 7
          status: ${{ job.status }}
          token: ${{ secrets.CODECOV_TOKEN }}
          codecov-files: test-results/junit.xml
          coverage-report: test-results/coverage.xml

  test-examples-partcad:
    name: "Examples (PartCAD)"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    if: ${{ !startsWith(github.event.head_commit.message, 'Version updated') }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-all
      - uses: ./.github/actions/setup-test

      - name: Prepare folders
        shell: bash
        run: |
          mkdir -pv test-results

      - name: Install CLI
        shell: bash
        run: |
          # shellcheck disable=SC1090
          . ~/.bashrc
          # shellcheck disable=SC1090
          . ~/.bash_profile

          mamba activate test
          pip install -U ./partcad ./partcad-cli
          mamba deactivate

      - name: Basic integration test for CLI (PartCAD examples)
        shell: bash
        run: |
          # shellcheck disable=SC1090
          . ~/.bashrc
          # shellcheck disable=SC1090
          . ~/.bash_profile

          DIR=$(pwd)
          mamba activate test

          # BEGIN CLEAN PACKAGE
          mkdir new_pkg
          cd new_pkg
          if ! coverage run pc --no-ansi init; then
            echo "Failed to initialize package"
            exit 1
          fi
          if ! coverage run pc --no-ansi list all -r; then
            echo "Failed to list package contents"
            exit 1
          fi
          # END CLEAN PACKAGE

          # BEGIN PARTCAD EXAMPLES
          cd ../examples
          coverage run pc --no-ansi list all -r
          coverage run pc --no-ansi test -r
          coverage run pc --no-ansi render -r
          # END PARTCAD EXAMPLES

          coverage xml --data-file=$DIR/.coverage -o $DIR/test-results/coverage.xml
          mamba deactivate

      - name: Upload test results & coverage reports to github and codecov
        if: always()
        uses: ./.github/actions/upload-test-results
        with:
          name: test-results
          path: test-results/
          retention-days: 7
          status: ${{ job.status }}
          token: ${{ secrets.CODECOV_TOKEN }}
          codecov-files: test-results/junit.xml
          coverage-report: test-results/coverage.xml

  test-examples-all:
    name: "Examples (All)"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    if: ${{ !startsWith(github.event.head_commit.message, 'Version updated') }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-all
      - uses: ./.github/actions/setup-test

      - name: Prepare folders
        shell: bash
        run: |
          mkdir -pv test-results

      - name: Install CLI
        shell: bash
        run: |
          # shellcheck disable=SC1090
          . ~/.bashrc
          # shellcheck disable=SC1090
          . ~/.bash_profile

          mamba activate test
          pip install -U ./partcad ./partcad-cli
          mamba deactivate

      - name: Basic integration test for CLI (all examples)
        shell: bash
        run: |
          # shellcheck disable=SC1090
          . ~/.bashrc
          # shellcheck disable=SC1090
          . ~/.bash_profile

          DIR=$(pwd)
          mamba activate test
          # BEGIN ALL EXAMPLES
          cd examples
          coverage run pc --no-ansi test -r --package /pub/examples
          # END ALL EXAMPLES

          coverage xml --data-file=$DIR/.coverage -o $DIR/test-results/coverage.xml
          mamba deactivate

      - name: Upload test results & coverage reports to github and codecov
        if: always()
        uses: ./.github/actions/upload-test-results
        with:
          name: test-results
          path: test-results/
          retention-days: 7
          status: ${{ job.status }}
          token: ${{ secrets.CODECOV_TOKEN }}
          codecov-files: test-results/junit.xml
          coverage-report: test-results/coverage.xml

  test-entire-repo:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04-l, windows-latest-l]
        python-version: ["3.10", "3.12"]
    runs-on: ${{ matrix.os }}
    if: ${{ !startsWith(github.event.head_commit.message, 'Version updated') }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-all
      - uses: ./.github/actions/setup-test

      - name: Prepare folders
        shell: bash
        run: |
          mkdir -pv test-results

      - name: Install CLI
        shell: bash
        run: |
          # shellcheck disable=SC1090
          . ~/.bashrc
          # shellcheck disable=SC1090
          . ~/.bash_profile

          mamba activate test
          pip install -U ./partcad ./partcad-cli
          mamba deactivate

      - name: Test the entire repository
        shell: bash
        run: |
          # shellcheck disable=SC1090
          . ~/.bashrc
          # shellcheck disable=SC1090
          . ~/.bash_profile

          DIR=$(pwd)
          mamba activate test
          # BEGIN PUBLIC REPO
          cd examples
          coverage run pc --no-ansi test -r --package /pub
          # END PUBLIC REPO

          coverage xml --data-file=$DIR/.coverage -o $DIR/test-results/coverage.xml
          mamba deactivate


      - name: Upload test results & coverage reports to github and codecov
        if: always()
        uses: ./.github/actions/upload-test-results
        with:
          name: test-results
          path: test-results/
          retention-days: 7
          status: ${{ job.status }}
          token: ${{ secrets.CODECOV_TOKEN }}
          codecov-files: test-results/junit.xml
          coverage-report: test-results/coverage.xml
